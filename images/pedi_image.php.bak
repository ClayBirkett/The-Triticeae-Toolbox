<?php
	include("../includes/bootstrap.inc");
/**
 * This function will draw the pedigree based on the pedigree matrix
 */
function draw_matrix (array $mx, $maxcol, array $leaves, array $mxnm) {
	$maxlv=count($leaves);
	$cell_width=50;
	$cell_height=50;
	$hlw=1; // half of line width
	$bmg=5; // margin for button
	$imw=$maxcol*$cell_width+100+3*$cell_width;
	$imh=$maxlv*$cell_height+100;
	$x=50;
	$y=50;
	$im=imagecreatetruecolor($imw, $imh);
    $im_black=imagecolorallocate($im, 0x00, 0x00, 0x00);
    $im_white=imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
    $im_blue=imagecolorallocate($im, 0x00, 0x00, 0xFF);
    $im_gray=imagecolorallocate($im, 0xC0, 0xC0, 0xC0);
    $im_orange=imagecolorallocate($im, 0xFF, 0xA5, 0x00);
    $im_green=imagecolorallocate($im, 0x00, 0xFF, 0x33);
    $im_grayblue=imagecolorallocate($im, 0x99, 0xCC, 0xFF);
    $im_graydeepblue=imagecolorallocate($im, 0x33, 0x66, 0xCC);
    $im_bgblue=imagecolorallocate($im, 0xE9, 0xF1, 0xFF);
    $im_whitesmoke=imagecolorallocate($im, 0xF5, 0xF5, 0xF5);
    $im_tomato=imagecolorallocate($im, 0xFF, 0x63, 0x47);
    $im_royalblue=imagecolorallocate($im, 0x41, 0x69, 0xE1);
    $im_salmon=imagecolorallocate($im, 0xFA, 0x80, 0x72);
    $im_seagreen=imagecolorallocate($im, 0x2E, 0x8B, 0x57);
    imagefill($im, 0, 0, $im_white);
    for ($i=$maxcol-1; $i>=0; $i--) {
    		for ($j=0; $j<$maxlv; $j++) {
    			$xcoor=$x+($maxcol-1-$i)*$cell_width;
    			$ycoor=$y+$j*$cell_height;
    			if ($mx[$j][$i]==2) { // draw a T
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width-$bmg, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height-$bmg, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    				imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-5, $im_green);
    				$bstr=$mxnm[$j][$i];
    				if (strlen($bstr)>6) {
    					$bstr=substr($bstr, 0, 6);
    				}
    				imagestring($im, 3, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $bstr, $im_black);
    			}
    			elseif ($mx[$j][$i]==1) { // draw a -
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			elseif ($mx[$j][$i]==0.5) { // draw a |
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    			}
    			elseif ($mx[$j][$i]==1.5) { // draw a L
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height/2, $im_black);
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			else {
    				// leave blank
    			}
    		}
    }
    $xcoor=$x+($maxcol)*$cell_width;
    for ($k=0; $k<$maxlv; $k++) {
    	$ycoor=$y+$k*$cell_height;
    	imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    	imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_grayblue);
    	$lstr=$leaves[$k];
    	if (strlen($lstr)>6) $lstr=substr($lstr, 0, 4)."..";
    	imagestring($im, 3, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $lstr, $im_black);
    }
    Header('Content-type: image/png');
    imagepng($im);
    imagedestroy($im);
}

function draw_sequence($im, $seq, $nx, $ny, $nwidth, $nheight, $bmg, $cmg, $im_tomato, $im_seagreen, $im_royalblue, $im_salmon, $im_gray, $im_black) {
	global $im;
	
	$cls=array('A'=>'im_tomato', 'T'=>'im_royalblue', 'G'=>'im_salmon', 'C'=>'im_seagreen', 'N'=>'im_gray');
    	for ($s=0; $s<strlen($seq); $s++) {
    		$chr=substr($seq, $s, 1);
    		$dnx=$nx+$s*$nwidth;
    		$dny=$ny;
    		imagefilledrectangle($im, $dnx+1, $dny+$cmg, $dnx+$nwidth-1, $dny+$nheight-$cmg, ${$cls[$chr]});
    		imagestring($im, 4, $dnx+$bmg+1, $dny+$nheight/2-10, $chr, $im_black);
    	}
}

function draw_cladematrix (array $mx, array $mxnm, $dstr, $cell_size) {
	$maxlv=count($mx);
	$maxcol=count($mx[0])-1;
	$cell_width=50;
	$cell_height=50;
	if ($cell_size>10 && $cell_size<50) {
		$cell_width=$cell_size;
		$cell_height=$cell_size;
	}
	$hlw=1; // half of line width
	$bmg=5; // margin for button
	$cmg=10; // margin for characters
	$nwidth=20; // width of a character
	$nheight=$cell_height; // height of a character
	$imw=$maxcol*$cell_width+100+3*$cell_width+$nwidth*strlen($dstr);
	$imh=$maxlv*$cell_height+100;
	$x=50;
	$y=50;
	global $im;
	$im=imagecreatetruecolor($imw, $imh);
    $im_black=imagecolorallocate($im, 0x00, 0x00, 0x00);
    $im_white=imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
    $im_blue=imagecolorallocate($im, 0x00, 0x00, 0xFF);
    $im_gray=imagecolorallocate($im, 0xC0, 0xC0, 0xC0);
    $im_orange=imagecolorallocate($im, 0xFF, 0xA5, 0x00);
    $im_green=imagecolorallocate($im, 0x00, 0xFF, 0x33);
    $im_grayblue=imagecolorallocate($im, 0x99, 0xCC, 0xFF);
    $im_graydeepblue=imagecolorallocate($im, 0x33, 0x66, 0xCC);
    $im_bgblue=imagecolorallocate($im, 0xE9, 0xF1, 0xFF);
    $im_purple=imagecolorallocate($im, 0xFF, 0x33, 0xFF);
    $style = array($im_blue, $im_blue, $im_blue, $im_blue, $im_blue, $im_bgblue, $im_bgblue, $im_bgblue, $im_bgblue, $im_bgblue);
    imagesetstyle($im, $style);
    $im_whitesmoke=imagecolorallocate($im, 0xF5, 0xF5, 0xF5);
    $im_tomato=imagecolorallocate($im, 0xFF, 0x63, 0x47);
    $im_royalblue=imagecolorallocate($im, 0x41, 0x69, 0xE1);
    $im_salmon=imagecolorallocate($im, 0xFA, 0x80, 0x72);
    $im_seagreen=imagecolorallocate($im, 0x2E, 0x8B, 0x57);
    $im_mediumseagreen=imagecolorallocate($im, 0x3C, 0xB3, 0x71);
    $im_skyblue=imagecolorallocate($im, 0x87, 0xCE, 0xEB);
    imagefill($im, 0, 0, $im_whitesmoke);
    for ($i=$maxcol-1; $i>=0; $i--) {
    		for ($j=0; $j<$maxlv; $j++) {
    			$xcoor=$x+($maxcol-1-$i)*$cell_width;
    			$ycoor=$y+$j*$cell_height;
    			// if ($i==0) imageline($im, $x, $ycoor+$cell_height, $x+($maxcol+1)*$cell_width, $ycoor+$cell_height, IMG_COLOR_STYLED);
    			if ($mx[$j][$i]==2) { // draw a T
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$bmg, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height-$bmg, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    				imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_mediumseagreen);
    				$bstr=$mxnm[$j][$i];
    				$display_string_len=6;
    				if ($cell_size<50) $display_string_len=4;
    				if (strlen($bstr)>$display_string_len) {
    					$bstr=substr($bstr, 0, $display_string_len).".";
    				}
    				imagestring($im, 2, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $bstr, $im_black);
    			}
    			elseif ($mx[$j][$i]==1) { // draw a -
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			elseif ($mx[$j][$i]==0.5) { // draw a |
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    			}
    			elseif ($mx[$j][$i]==1.5) { // draw a L
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height/2, $im_black);
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			elseif ($mx[$j][$i]==1.8) { // draw a r
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			else {
    				// leave blank
    			}
    		}
    }
    $xcoor=$x+($maxcol)*$cell_width;
    for ($k=0; $k<$maxlv; $k++) {
    	$lstr=$mx[$k][$maxcol];
    	if (! isset($lstr) || $lstr=='') continue;
    	$ycoor=$y+$k*$cell_height;
    	imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    	imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_skyblue);
    	$display_string_len=6;
    	if ($cell_size<50) $display_string_len=4;
    	if (strlen($lstr)>$display_string_len) $lstr=substr($lstr, 0, $display_string_len).".";
    	imagestring($im, 2, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $lstr, $im_black);
        // draw_sequence($im, $dstr, $nx, $ycoor, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_green, $im_blue, $im_purple, $im_gray, $im_black);
    }	
    // draw the consensus sequence
    
    imagestring($im, 8, $xcoor, $y-30, "Consus", $im_black);
    $nx=$xcoor+2*$cell_width;
    $ny=$y-$cell_height;
    draw_sequence($im, $dstr, $nx, $ny, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_seagreen, $im_royalblue, $im_tomato, $im_gray, $im_black);
    for ($k=0; $k<$maxlv; $k++)  {
    	$ycoor=$y+$k*$cell_height;
    	draw_sequence($im, $dstr, $nx, $ycoor, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_seagreen, $im_royalblue, $im_tomato, $im_gray, $im_black);
	}
    	
    // draw sequences
    Header('Content-type: image/png');
    imagepng($im);
}

/**
 * draw pedigree trees in purdy notation, consider the recurrent parent in backcross
 */
function draw_purdy (array $mx, array $mxnm, $dstr, $cell_size) {
	$maxlv=count($mx);
	$maxcol=count($mx[0])-1;
	$cell_width=50;
	$cell_height=50;
	if ($cell_size>10 && $cell_size<50) {
		$cell_width=$cell_size;
		$cell_height=$cell_size;
	}
	$hlw=1; // half of line width
	$bmg=5; // margin for button
	$cmg=10; // margin for characters
	$nwidth=20; // width of a character
	$nheight=$cell_height; // height of a character
	$imw=$maxcol*$cell_width+100+3*$cell_width+$nwidth*strlen($dstr);
	$imh=$maxlv*$cell_height+100;
	$x=50;
	$y=50;
	global $im;
	$im=imagecreatetruecolor($imw, $imh);
    $im_black=imagecolorallocate($im, 0x00, 0x00, 0x00);
    $im_white=imagecolorallocate($im, 0xFF, 0xFF, 0xFF);
    $im_blue=imagecolorallocate($im, 0x00, 0x00, 0xFF);
    $im_gray=imagecolorallocate($im, 0xC0, 0xC0, 0xC0);
    $im_orange=imagecolorallocate($im, 0xFF, 0xA5, 0x00);
    $im_green=imagecolorallocate($im, 0x00, 0xFF, 0x33);
    $im_grayblue=imagecolorallocate($im, 0x99, 0xCC, 0xFF);
    $im_graydeepblue=imagecolorallocate($im, 0x33, 0x66, 0xCC);
    $im_bgblue=imagecolorallocate($im, 0xE9, 0xF1, 0xFF);
    $im_purple=imagecolorallocate($im, 0xFF, 0x33, 0xFF);
    $style = array($im_blue, $im_blue, $im_blue, $im_blue, $im_blue, $im_bgblue, $im_bgblue, $im_bgblue, $im_bgblue, $im_bgblue);
    imagesetstyle($im, $style);
    $im_whitesmoke=imagecolorallocate($im, 0xF5, 0xF5, 0xF5);
    $im_tomato=imagecolorallocate($im, 0xFF, 0x63, 0x47);
    $im_royalblue=imagecolorallocate($im, 0x41, 0x69, 0xE1);
    $im_salmon=imagecolorallocate($im, 0xFA, 0x80, 0x72);
    $im_seagreen=imagecolorallocate($im, 0x2E, 0x8B, 0x57);
    $im_mediumseagreen=imagecolorallocate($im, 0x3C, 0xB3, 0x71);
    $im_skyblue=imagecolorallocate($im, 0x87, 0xCE, 0xEB);
    imagefill($im, 0, 0, $im_whitesmoke);
    for ($i=$maxcol-1; $i>=0; $i--) {
    		for ($j=0; $j<$maxlv; $j++) {
    			$xcoor=$x+($maxcol-1-$i)*$cell_width;
    			$ycoor=$y+$j*$cell_height;
    			// if ($i==0) imageline($im, $x, $ycoor+$cell_height, $x+($maxcol+1)*$cell_width, $ycoor+$cell_height, IMG_COLOR_STYLED);
    			if ($mx[$j][$i]==2) { // draw a T
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$bmg, $im_black);
    				imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height-$bmg, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    				imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_mediumseagreen);
    				$bstr=$mxnm[$j][$i];
    				// if it is number*name then draw the number in the upper left corner of the block 
					if (preg_match('/(\d\*)(.*?)/', $bstr, $mts)) {
						$bstr=$mts[2];
						imagestring($im, 2, $xcoor, $ycoor,$mts[1], $im_black);
					}
					elseif (preg_match('/(.*?)(\*\d)/', $bstr, $mts)) {
						$bstr=$mts[1];
						imagestring($im, 2, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_black);
					}
    				$display_string_len=6;
    				if ($cell_size<50) $display_string_len=4;
    				if (strlen($bstr)>$display_string_len) {
    					$bstr=substr($bstr, 0, $display_string_len).".";
    				}
    				imagestring($im, 2, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $bstr, $im_black);
    			}
    			elseif ($mx[$j][$i]==1) { // draw a -
					imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			elseif ($mx[$j][$i]==0.5) { // draw a |
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
    			}
    			elseif ($mx[$j][$i]==1.5) { // draw a L
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height/2, $im_black);
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			elseif ($mx[$j][$i]==1.8) { // draw a r
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2, $xcoor+$cell_width/2+$hlw, $ycoor+$cell_height, $im_black);
					imagefilledrectangle($im, $xcoor+$cell_width/2-$hlw, $ycoor+$cell_height/2-$hlw, $xcoor+$cell_width, $ycoor+$cell_height/2+$hlw, $im_black);
    			}
    			else {
    				// leave blank
    			}
    		}
    }
    $xcoor=$x+($maxcol)*$cell_width;
    for ($k=0; $k<$maxlv; $k++) {
    	$lstr=$mx[$k][$maxcol];
    	if (! isset($lstr) || $lstr=='') continue;
    	$ycoor=$y+$k*$cell_height;
    	imagefilledrectangle($im, $xcoor, $ycoor+$cell_height/2-$hlw, $xcoor+$bmg, $ycoor+$cell_height/2+$hlw, $im_black);
    	imagefilledrectangle($im, $xcoor+$bmg, $ycoor+$bmg, $xcoor+$cell_width-$bmg, $ycoor+$cell_height-$bmg, $im_skyblue);
    	if (preg_match('/^(\d+\*)(.*)/', $lstr, $mts)) {
			$lstr=$mts[2];
			imagestring($im, 2, $xcoor, $ycoor,$mts[1], $im_black);
		}
		elseif (preg_match('/(.*?)(\*\d+)/', $lstr, $mts)) {
			$lstr=$mts[1];
			imagestring($im, 2, $xcoor+$cell_width-$bmg*2, $ycoor+$cell_height-$bmg*2, $mts[2], $im_black);
		}
    	$display_string_len=6;
    	if ($cell_size<50) $display_string_len=4;
    	if (strlen($lstr)>$display_string_len) $lstr=substr($lstr, 0, $display_string_len).".";
    	imagestring($im, 2, $xcoor+$bmg+1, $ycoor+$cell_height/2-10, $lstr, $im_black);
        // draw_sequence($im, $dstr, $nx, $ycoor, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_green, $im_blue, $im_purple, $im_gray, $im_black);
    }	
    // draw the consensus sequence
    
    imagestring($im, 8, $xcoor, $y-30, "Consus", $im_black);
    $nx=$xcoor+2*$cell_width;
    $ny=$y-$cell_height;
    draw_sequence($im, $dstr, $nx, $ny, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_seagreen, $im_royalblue, $im_tomato, $im_gray, $im_black);
    for ($k=0; $k<$maxlv; $k++)  {
    	$ycoor=$y+$k*$cell_height;
    	draw_sequence($im, $dstr, $nx, $ycoor, $nwidth, $nheight, $bmg, $cmg, $im_orange, $im_seagreen, $im_royalblue, $im_tomato, $im_gray, $im_black);
	}
    	
    // draw sequences
    Header('Content-type: image/png');
    imagepng($im);
}

connect();
session_start();
// ini_set("memory_limit","36M");
if (isset($_SESSION['draw_pedigree_matrix'])) {
	$pdarr=$_SESSION['draw_pedigree_matrix'];
	$dstr=$_SESSION['draw_snps'];
	$mx=$pdarr[0];
	$mxnm=$pdarr[1];
	$mxcol=$pdarr[2];
	$mxrow=count($mx);
	$mxarea=$mxcol*$mxrow;
	if ($mxarea>=20 && $mxarea<100) ini_set("memory_limit","12M");
	elseif ($mxarea>=100 && $mxarea<160) ini_set("memory_limit","24M");
	elseif ($mxarea>160) ini_set("memory_limit","36M");
	draw_purdy($mx, $mxnm, $dstr, 40);
	// draw_cladematrix($mx, $mxnm, $dstr, 40);
}
else {
	// print_r($_SESSION);
}

?>
